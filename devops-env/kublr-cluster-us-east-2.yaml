kind: Cluster
metadata:
  name: devops-demo-us-east-2
  space: devops
spec:
  kublrAgentTgzUrl: 'https://repo.kublr.com/repository/gobinaries/kublr/1.19.7-26/kublr-1.19.7-26-linux.tar.gz'
  locations:
    - name: aws1
      aws:
        region: us-east-2
        enableTerminationProtection: false
        awsApiAccessSecretRef: aws
        availabilityZones:
          - us-east-2a
          - us-east-2b
          - us-east-2c
        resourcesCloudFormationExtras:
          DevOpsDemoEFS:
            Type: AWS::EFS::FileSystem
            Properties: {}
          DevOpsDemoEFSMT0:
            Type: AWS::EFS::MountTarget
            Properties: 
              FileSystemId: { Ref: DevOpsDemoEFS }
              SecurityGroups: [ { "Fn::GetAtt": [ NewVpc, DefaultSecurityGroup ] } ]
              SubnetId: { Ref: SubnetNodePublic0 }
          DevOpsDemoEFSMT1:
            Type: AWS::EFS::MountTarget
            Properties:
              FileSystemId: { Ref: DevOpsDemoEFS }
              SecurityGroups: [ { "Fn::GetAtt": [ NewVpc, DefaultSecurityGroup ] } ]
              SubnetId: { Ref: SubnetNodePublic1 }
          DevOpsDemoEFSMT2:
            Type: AWS::EFS::MountTarget
            Properties:
              FileSystemId: { Ref: DevOpsDemoEFS }
              SecurityGroups: [ { "Fn::GetAtt": [ NewVpc, DefaultSecurityGroup ] } ]
              SubnetId: { Ref: SubnetNodePublic2 }
          DevOpsDemoPrivateHostedZone:
            Type: AWS::Route53::HostedZone
            Properties:
              Name: devops-demo.kublr.local
              VPCs: 
                - VPCId: { Ref: NewVpc }
                  VPCRegion: { Ref: 'AWS::Region' }
          DevOpsDemoPrivateHostedZoneRecordSetEFS:
            Type: AWS::Route53::RecordSet
            Properties:
              HostedZoneId: { Ref: DevOpsDemoPrivateHostedZone }
              Name: efs.devops-demo.kublr.local
              ResourceRecords:
                - { "Fn::Sub": [ '${EFS}.efs.${AWS::Region}.amazonaws.com', { EFS: { Ref: DevOpsDemoEFS } } ] }
              TTL: "300"
              Type: CNAME
  network:
    apiServerSecurePort: 443
  master:
    locations:
      - aws:
          instanceType: t3.medium
          availabilityZones:
            - us-east-2a
            - us-east-2b
            - us-east-2c
          overrideImageId: ami-07c8bc5c1ce9598c3
          imageRootDeviceName: /dev/xvda
          groupType: asg-mip
          #launchTemplateDataCloudFormationExtras:
          #  InstanceMarketOptions:
          #    MarketType: spot
          #    SpotOptions:
          #      SpotInstanceType: one-time
          mixedInstancesPolicyCloudFormationExtras:
            InstancesDistribution:
              OnDemandPercentageAboveBaseCapacity: 0
            LaunchTemplate:
              Overrides:
                - InstanceType: t3.medium
                - InstanceType: t2.medium
          instanceMonitoring: false
          rootVolume:
            size: 40
        locationRef: aws1
    minNodes: 3
    kublrVariant: aws-amazon-linux-2
    kublrAgentConfig:
      kublr:
        psp:
          default_clusterrole: 'psp:privileged'
  nodes:
    - name: group1
      locations:
        - locationRef: aws1
          aws:
            instanceType: m5a.large
            availabilityZones:
              - us-east-2a
              - us-east-2b
              - us-east-2c
            overrideImageId: ami-07c8bc5c1ce9598c3
            imageRootDeviceName: /dev/xvda
            groupType: asg-mip
            #launchTemplateDataCloudFormationExtras:
            #  InstanceMarketOptions:
            #    MarketType: spot
            #    SpotOptions:
            #      SpotInstanceType: one-time
            mixedInstancesPolicyCloudFormationExtras:
              InstancesDistribution:
                OnDemandPercentageAboveBaseCapacity: 0
              LaunchTemplate:
                Overrides:
                  - InstanceType: m5a.large
                  - InstanceType: m5.large
                  - InstanceType: m5ad.large
                  - InstanceType: m5d.large
                  - InstanceType: m5n.large
                  - InstanceType: m5dn.large
                  - InstanceType: t3.large
            instanceMonitoring: false
            rootVolume:
              size: 40
      kublrVariant: aws-amazon-linux-2
      autoscaling: false
      minNodes: 3
      stateful: false
  features:
    system:
      chart:
        version: 1.20.0-19
      values:
        storageClass:
          defaultClass: false
    monitoring:
      chart:
        version: 1.20.0-22
      enabled: true
      selfHosted:
        alertmanager:
          enabled: true
          persistent: true
          size: 2G
        prometheus:
          persistent: true
          size: 32G
        grafana:
          persistent: true
          size: 10G
          enabled: true
        enabled: true
      values:
        prometheus:
          persistence:
            storageClass: nfs-client
        grafana:
          persistence:
            storageClass: nfs-client
        alertmanager:
          persistence:
            storageClass: nfs-client
    ingress:
      ingressControllers:
        - nginx:
            enabled: true
            acme:
              enabled: true
              apiUrl: 'https://acme-v02.api.letsencrypt.org/directory'
              email: example-email+devopsdemo@gmail.com
      chart:
        version: 1.20.0-18
    kublrOperator:
      enabled: true
      chart:
        version: 1.20.0-20
  packages:
    nfs-subdir-external-provisioner:
      helmVersion: '3.4.0'
      namespace: kube-system
      releaseName: nfs-subdir-external-provisioner
      chart:
        name: nfs-subdir-external-provisioner
        url: https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner/releases/download/nfs-subdir-external-provisioner-3.0.0/nfs-subdir-external-provisioner-3.0.0.tgz
      values:
        nfs:
          server: efs.devops-demo.kublr.local
          path: /
        storageClass:
          defaultClass: true
    jenkins:
      helmVersion: '3.4.0'
      namespace: devops
      releaseName: jenkins
      chart:
        name: jenkins
        url: 'https://github.com/jenkinsci/helm-charts/releases/download/jenkins-3.1.8/jenkins-3.1.8.tgz'
      values:
        persistence:
          storageClass: nfs-client
          accessMode: ReadWriteMany
        controller:
          javaOpts: '-Dorg.jenkinsci.plugins.durabletask.BourneShellScript.LAUNCH_DIAGNOSTICS=true'
          ingress:
            enabled: true
            apiVersion: networking.k8s.io/v1
            annotations:
              kubernetes.io/ingress.class: nginx
              kubernetes.io/tls-acme: "true"
            hostName: jenkins.devops-demo-us-east-2.workshop.kublr.com
            tls:
              - secretName: tls-jenkins.devops-demo-us-east-2.workshop.kublr.com
                hosts:
                  - jenkins.devops-demo-us-east-2.workshop.kublr.com
          installPlugins:
            - 'kubernetes:1.27.6'
            - 'workflow-aggregator:2.6'
            - 'git:4.5.2'
            - 'configuration-as-code:1.47'
    sonatype-nexus:
      helmVersion: '3.4.0'
      namespace: devops
      releaseName: sonatype-nexus
      chart:
        name: sonatype-nexus
        url: https://github.com/Oteemo/charts/releases/download/sonatype-nexus-4.2.0/sonatype-nexus-4.2.0.tgz
      values:
        nexus:
          imageTag: 3.29.2
        nexusProxy:
          env:
            nexusDockerHost: cr.devops-demo-us-east-2.workshop.kublr.com
            nexusHttpHost: nexus.devops-demo-us-east-2.workshop.kublr.com
        ingress:
          enabled: true
          annotations:
            kubernetes.io/tls-acme: "true"
          tls:
            secretName: tls-nexus.devops-demo-us-east-2.workshop.kublr.com
        ingressDocker:
          enabled: true
          annotations:
            kubernetes.io/tls-acme: "true"
          tls:
            secretName: tls-cr.devops-demo-us-east-2.workshop.kublr.com
        statefulset:
          enabled: true
        # deploymentStrategy:
        #   rollingUpdate:
        #     maxUnavailable: 100%
        #     maxSurge: 100%
        persistence:
          storageClass: nfs-client
        nexusCloudiam:
          enabled: false
          persistence:
            enabled: false
        nexusBackup:
          persistence:
            enabled: false
        resources:
          requests:
            cpu: 250m
            memory: 2Gi
